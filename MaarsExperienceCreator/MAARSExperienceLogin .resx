<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACqFgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAFnFJ
        REFUeNrt3XuYXHV9x/H37mYTciEXciEcDImA3OUiZbRioRWrWERpUSteigjoYGsvtlYeLZXnEZ/WqtX6
        SBnxwkVRW1Fo1SJYHgtIgSkKUZRwi4khQ0LIBZJs2GSz2z8+v8NMdmdnZ/ecOXNm9/N6nnk2uzs5c+bs
        nN/1+/v+wMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
        zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
        zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMOlxXu0/AzKqi
        QnE/4HXA+kq5dH+rX29au9+wmUFUKHYDK4A/BV4D/HEWr9vd7jduNtVFheIsdMPfCHwQeBxYn8VruwVg
        1iZRoQgQARcB7wcODL+6p1Iubc/iHFpSAITmzHxgOjA0gUN0AQPAlkq5NJjFhRjj/fSE99Ob8P1srpRL
        Qylen22Vcmmg3dcnL8J1XUD6n+shYGulXNrTgtMeAh5ANf4s4Dmg3MrrVKtVLYAFwGeB44G9E/j/3cCT
        wLuAbVldjAYWA/8CHJng/TwOnA/0AfsD/wycAEykgOsGngD+BljT7ouTI8cDnwIWMrGCdTR7gL8Hbkvz
        ZCvlElGh2AecAcwB/gp9Jh7K5GrRugKgFzgqvJmJmg/0ZHUhxjAdOAY4LuEx4jGXaej6nJjgeDOA/dp9
        YfIiKhSnARejAbRW+GBUKP60Ui5tTvGclwEfA96BKpivA7eTYaXnMYD2SbOGMjgVOKeFx38VcBZwfRoH
        iwrFFwGfBt4K/AL4aqVc6ifjFp1nAazjhbnzC9GAWqvMBi6JCsWDUzjfw1AX8M3AbuBq4NEMLtUILgBs
        Mvh9VDu32m8B7wij9xMSFYrHAyV083cDdwE3VsqlDE5/JHcBrKNFheJ8VPsfkMHLTUMD0zczzho7KhS7
        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
        u1HTu7YZvhqFZa5FA2lxLb8LeL6Tgi+sM4Wux3T2XSh2EPrcrwiPCBUaB1BN9pKWXege+B5qGfw0abLU
        cRcAYSXdwcAfoBu/wMSa+ANUb+DN6AZ/FN3g61BT/RnCwgzX3tYJokJxOtVQ9CWogHgx1bUpB6ICZBYq
        TCZaCW9Cswg3oc1SN06kEmz6xcP03Ulos4JzwhtqpraPB962o5t8PVp5tY7qDf8kqvX70XrtCV4Ts/wJ
        6e6no6nORWjaewUqEJaHxzKqqeDGUyg8j2YOvoM2KH1sPN2DMV8oKhRnomb+21H/fnmD/zeIpsA2oz74
        arTE8ldohdUmwqh7uwMgzNotdKNnoUHI+WgQ8ii0xuU4qt2IBYw9vjCAugc3Ad8Gfhm2K2to1AIgKhTn
        oMG884A3MHKLp0GqCRfWopv8wfDvteFkdgB7XaObNacmx+QsNJ5wKGoxHA4cgwqHA1BrYrTAuQpwM9p6
        78FKubR7tNcbUQCEqZJTgUvQDqVza563Ga2CWoMimR4EHkaDdTuYAgkUzNohzLTNoZrv4mjgBJTJajnV
        rfRig2g27LvADWjAcM/w43bVvMAMNKB3EZrDn41u7LXoRr+fat/9qUalipm1XhiXi1PaHYqiawtU92Wc
        i7oO64BvAl8DHqktCLrCAMXhwLtQHz8OTfwZyoqyFo3Ue3DOLMdCgRCHSp+IBu2PRQXDctQ1uA7tYLyu
        Ui4NdUWF4pFoJd52NCr/FLDNmVPNOlvNattFaNahgHYu3gF8H7irK5Qa4Eg5s0kvxCkcgaYdH2v3+ZiZ
        mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
        mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
        mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVla/h9xds58EDjIcQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>